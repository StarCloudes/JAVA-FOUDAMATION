{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\f1 \'cc\'e2\'c4\'bf
\f0 1 
\f1 \'a3\'ba
\f0  
\f1 \'c1\'bd\'ca\'fd\'d6\'ae\'ba\'cd
\f0  
\f1 \'a3\'a8\'bc\'f2\'b5\'a5\'a3\'a9
\f0 \

\f1 \'b8\'f8\'b6\'a8\'d2\'bb\'b8\'f6\'d2\'d1\'b0\'b4\'d5\'d5\'c9\'fd\'d0\'f2\'c5\'c5\'c1\'d0
\f0  
\f1 \'b5\'c4\'d3\'d0\'d0\'f2\'ca\'fd\'d7\'e9\'a3\'ac\'d5\'d2\'b5\'bd\'c1\'bd\'b8\'f6\'ca\'fd\'ca\'b9\'b5\'c3\'cb\'fc\'c3\'c7\'cf\'e0\'bc\'d3\'d6\'ae\'ba\'cd\'b5\'c8\'d3\'da\'c4\'bf\'b1\'ea\'ca\'fd\'a1\'a3
\f0 \
\

\f1 \'ba\'af\'ca\'fd\'d3\'a6\'b8\'c3\'b7\'b5\'bb\'d8\'d5\'e2\'c1\'bd\'b8\'f6\'cf\'c2\'b1\'ea\'d6\'b5
\f0  index1 
\f1 \'ba\'cd
\f0  index2
\f1 \'a3\'ac\'c6\'e4\'d6\'d0
\f0  index1 
\f1 \'b1\'d8\'d0\'eb\'d0\'a1\'d3\'da
\f0  index2
\f1 \'a1\'a3
\f0 \
\

\f1 \'cb\'b5\'c3\'f7
\f0 :\
\

\f1 \'b7\'b5\'bb\'d8\'b5\'c4\'cf\'c2\'b1\'ea\'d6\'b5\'a3\'a8
\f0 index1 
\f1 \'ba\'cd
\f0  index2
\f1 \'a3\'a9\'b2\'bb\'ca\'c7\'b4\'d3\'c1\'e3\'bf\'aa\'ca\'bc\'b5\'c4\'a1\'a3
\f0 \

\f1 \'c4\'e3\'bf\'c9\'d2\'d4\'bc\'d9\'c9\'e8\'c3\'bf\'b8\'f6\'ca\'e4\'c8\'eb\'d6\'bb\'b6\'d4\'d3\'a6\'ce\'a8\'d2\'bb\'b5\'c4\'b4\'f0\'b0\'b8\'a3\'ac\'b6\'f8\'c7\'d2\'c4\'e3\'b2\'bb\'bf\'c9\'d2\'d4\'d6\'d8\'b8\'b4\'ca\'b9\'d3\'c3\'cf\'e0\'cd\'ac\'b5\'c4\'d4\'aa\'cb\'d8\'a1\'a3
\f0 \

\f1 \'ca\'be\'c0\'fd
\f0 :\
\

\f1 \'ca\'e4\'c8\'eb
\f0 : numbers = [2, 7, 11, 15], target = 9\

\f1 \'ca\'e4\'b3\'f6
\f0 : [1,2]\

\f1 \'bd\'e2\'ca\'cd
\f0 : 2 
\f1 \'d3\'eb
\f0  7 
\f1 \'d6\'ae\'ba\'cd\'b5\'c8\'d3\'da\'c4\'bf\'b1\'ea\'ca\'fd
\f0  9 
\f1 \'a1\'a3\'d2\'f2\'b4\'cb
\f0  index1 = 1, index2 = 2 
\f1 \'a1\'a3
\f0 \

\f1 \'b4\'f0\'b0\'b8\'a3\'ba
\f0 \
public int[] twoSum(int[] numbers, int target) \{\
      if(numbers == null ||numbers.length <= 1)\{\
          return new int[0];\
      \}\
      int[] res = new int[2];\
      int left = 0, right = numbers.length - 1;\
      while(left < right)\{\
          if(target < numbers[left] + numbers[right])\{\
              right --;\
          \} else if (target > numbers[left] + numbers[right])\{\
              left++;\
          \} else \{\
              res[0] = left+1;\
              res[1] = right+1;\
              break;\
          \}\
      \}\
      return res;\
  \}\
\
\
\
\
\

\f1 \'cc\'e2\'c4\'bf
\f0 2 
\f1 \'d2\'c6\'b6\'af\'c1\'e3
\f0   
\f1 \'a3\'a8\'bc\'f2\'b5\'a5\'a3\'a9
\f0 \

\f1 \'b8\'f8\'b6\'a8\'d2\'bb\'b8\'f6\'ca\'fd\'d7\'e9
\f0  nums
\f1 \'a3\'ac\'b1\'e0\'d0\'b4\'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'bd\'ab\'cb\'f9\'d3\'d0
\f0  0 
\f1 \'d2\'c6\'b6\'af\'b5\'bd\'ca\'fd\'d7\'e9\'b5\'c4\'c4\'a9\'ce\'b2\'a3\'ac\'cd\'ac\'ca\'b1\'b1\'a3\'b3\'d6\'b7\'c7\'c1\'e3\'d4\'aa\'cb\'d8\'b5\'c4\'cf\'e0\'b6\'d4\'cb\'b3\'d0\'f2\'a1\'a3
\f0 \
\

\f1 \'ca\'be\'c0\'fd
\f0 :\
\

\f1 \'ca\'e4\'c8\'eb
\f0 : [0,1,0,3,12]\

\f1 \'ca\'e4\'b3\'f6
\f0 : [1,3,12,0,0]\

\f1 \'cb\'b5\'c3\'f7
\f0 :\
\

\f1 \'b1\'d8\'d0\'eb\'d4\'da\'d4\'ad\'ca\'fd\'d7\'e9\'c9\'cf\'b2\'d9\'d7\'f7\'a3\'ac\'b2\'bb\'c4\'dc\'bf\'bd\'b1\'b4\'b6\'ee\'cd\'e2\'b5\'c4\'ca\'fd\'d7\'e9\'a1\'a3
\f0 \

\f1 \'be\'a1\'c1\'bf\'bc\'f5\'c9\'d9\'b2\'d9\'d7\'f7\'b4\'ce\'ca\'fd\'a1\'a3
\f0 \
\

\f1 \'b4\'f0\'b0\'b8\'a3\'ba
\f0 \
public void moveZeroes(int[] nums) \{\
    if(nums == null || nums.length <= 1)\{\
        return;\
    \}\
    int left = 0, right = 0;\
    while(right < nums.length)\{\
        if(nums[right] == 0)\{\
            right++;\
        \}else\{\
            swap(nums, left++, right++);\
        \}\
    \}\
    \
  \}\
  public void swap(int[] array, int left, int right)\{\
      int temp = array[left];\
      array[left] = array[right];\
      array[right] = temp;\
  \}\
\
\

\f1 \'cc\'e2\'c4\'bf
\f0 3 
\f1 \'b7\'ad\'d7\'aa\'d7\'d6\'b7\'fb\'b4\'ae\'c0\'ef\'b5\'c4\'b5\'a5\'b4\'ca
\f0   (
\f1 \'c4\'d1
\f0 )\
\

\f1 \'b8\'f8\'b6\'a8\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'d6\'f0\'b8\'f6\'b7\'ad\'d7\'aa\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'b5\'c4\'c3\'bf\'b8\'f6\'b5\'a5\'b4\'ca\'a1\'a3
\f0 \
\

\f1 \'ca\'be\'c0\'fd
\f0 :  \
\

\f1 \'ca\'e4\'c8\'eb
\f0 : "the sky is blue",\

\f1 \'ca\'e4\'b3\'f6
\f0 : "blue is sky the".\

\f1 \'cb\'b5\'c3\'f7
\f0 :\
\

\f1 \'ce\'de\'bf\'d5\'b8\'f1\'d7\'d6\'b7\'fb\'b9\'b9\'b3\'c9\'d2\'bb\'b8\'f6\'b5\'a5\'b4\'ca\'a1\'a3
\f0 \

\f1 \'ca\'e4\'c8\'eb\'d7\'d6\'b7\'fb\'b4\'ae\'bf\'c9\'d2\'d4\'d4\'da\'c7\'b0\'c3\'e6\'bb\'f2\'d5\'df\'ba\'f3\'c3\'e6\'b0\'fc\'ba\'ac\'b6\'e0\'d3\'e0\'b5\'c4\'bf\'d5\'b8\'f1\'a3\'ac\'b5\'ab\'ca\'c7\'b7\'b4\'d7\'aa\'ba\'f3\'b5\'c4\'d7\'d6\'b7\'fb\'b2\'bb\'c4\'dc\'b0\'fc\'c0\'a8\'a1\'a3
\f0 \

\f1 \'c8\'e7\'b9\'fb\'c1\'bd\'b8\'f6\'b5\'a5\'b4\'ca\'bc\'e4\'d3\'d0\'b6\'e0\'d3\'e0\'b5\'c4\'bf\'d5\'b8\'f1\'a3\'ac\'bd\'ab\'b7\'b4\'d7\'aa\'ba\'f3\'b5\'a5\'b4\'ca\'bc\'e4\'b5\'c4\'bf\'d5\'b8\'f1\'bc\'f5\'c9\'d9\'b5\'bd\'d6\'bb\'ba\'ac\'d2\'bb\'b8\'f6\'a1\'a3
\f0 \
\

\f1 \'b4\'f0\'b0\'b8\'a3\'ba
\f0 \
 public void reverseWords(char[] s) \{\
       //IXLoveXgoogle=>googleXLoveXI\
       //1:elgoogXevoLxI\
        //        i\
        //        s\
       //2:googleXLoveXI \
       //
\f1 \'d5\'e2\'b8\'f6\'bd\'e2\'b7\'a8\'d3\'d0\'d2\'bb\'b8\'f6
\f0 bug"ilovegoogle"\
        boolean haveSpaces = false;\
        for(int i = 0 ; i < s.length ; i++)\{\
            if(s[i] == ' ')\{\
                haveSpaces = true;\
            \}\
        \}\
        if(!haveSpaces)\{\
            return;\
        \}\
        reverse(s, 0, s.length-1);\
        int start = 0;\
        for(int i = 0 ; i < s.length ; i++)\{\
            if(s[i] == ' ')\{\
                reverse(s, start, i-1 );\
                start = i+1;\
            \}\
        \}\
        reverse(s , start, s.length-1);\
    \}\
    private void reverse(char[] s, int start, int end)\{\
        while(start < end)\{\
            char temp = s[start];\
            s[start] = s[end];\
            s[end] = temp;\
            start++;\
            end--;\
        \}\
    \}\
\
\
\
\

\f1 \'cc\'e2\'c4\'bf
\f0 4 
\f1 \'c8\'fd\'ca\'fd\'d6\'ae\'ba\'cd
\f0  
\f1 \'a3\'a8\'c4\'d1\'a3\'a9
\f0 \
\

\f1 \'b8\'f8\'b6\'a8\'d2\'bb\'b8\'f6\'b0\'fc\'ba\'ac
\f0  n 
\f1 \'b8\'f6\'d5\'fb\'ca\'fd\'b5\'c4\'ca\'fd\'d7\'e9
\f0  nums
\f1 \'a3\'ac\'c5\'d0\'b6\'cf
\f0  nums 
\f1 \'d6\'d0\'ca\'c7\'b7\'f1\'b4\'e6\'d4\'da\'c8\'fd\'b8\'f6\'d4\'aa\'cb\'d8
\f0  a
\f1 \'a3\'ac
\f0 b
\f1 \'a3\'ac
\f0 c 
\f1 \'a3\'ac\'ca\'b9\'b5\'c3
\f0  a + b + c = 0 
\f1 \'a3\'bf\'d5\'d2\'b3\'f6\'cb\'f9\'d3\'d0\'c2\'fa\'d7\'e3\'cc\'f5\'bc\'fe\'c7\'d2\'b2\'bb\'d6\'d8\'b8\'b4\'b5\'c4\'c8\'fd\'d4\'aa\'d7\'e9\'a1\'a3
\f0 \
\

\f1 \'d7\'a2\'d2\'e2\'a3\'ba\'b4\'f0\'b0\'b8\'d6\'d0\'b2\'bb\'bf\'c9\'d2\'d4\'b0\'fc\'ba\'ac\'d6\'d8\'b8\'b4\'b5\'c4\'c8\'fd\'d4\'aa\'d7\'e9\'a1\'a3
\f0 \
\

\f1 \'c0\'fd\'c8\'e7
\f0 , 
\f1 \'b8\'f8\'b6\'a8\'ca\'fd\'d7\'e9
\f0  nums = [-1, 0, 1, 2, -1, -4]
\f1 \'a3\'ac
\f0 \
\

\f1 \'c2\'fa\'d7\'e3\'d2\'aa\'c7\'f3\'b5\'c4\'c8\'fd\'d4\'aa\'d7\'e9\'bc\'af\'ba\'cf\'ce\'aa\'a3\'ba
\f0 \
[\
  [-1, 0, 1],\
  [-1, -1, 2]\
]\
\

\f1 \'b4\'f0\'b0\'b8\'a3\'ba
\f0 \
\
public ArrayList<ArrayList<Integer>> threeSum(int[] num) \{\
        ArrayList<ArrayList<Integer>> results = new ArrayList<ArrayList<Integer>>();\
        if(num.length < 3) return results;\
        Arrays.sort(num);\
        for(int i = 0; i <= num.length-3; i++) \{\
            if(i!=0 && num[i] == num[i-1]) continue;\
            int sum =  -num[i];\
            int start = i+1;\
            int end = num.length-1;\
            \
            while(start < end)\{\
                int tempsum = num[start] + num[end];\
                if(tempsum == sum)\{\
                    ArrayList<Integer> result = new ArrayList<Integer>();\
                    result.add(num[i]);\
                    result.add(num[start]);\
                    result.add(num[end]);\
                    results.add(result);\
                    start++;\
                    while(start<end && num[start] == num[start-1])\{\
                        start++;//two sum
\f1 \'b6\'d4
\f0 start 
\f1 \'c5\'d0\'b6\'cf\'c8\'a5\'d6\'d8
\f0 \
                    \}\
                    end--;\
                    while(start<end && num[end] == num[end+1])\{\
                        end--;//two sum 
\f1 \'b6\'d4
\f0 end
\f1 \'c5\'d0\'b6\'cf\'c8\'a5\'d6\'d8
\f0 \
                    \}\
                \}else if(tempsum > sum)\{\
                    end--;\
                \}else\{\
                    start++;\
                \}\
            \}\
    \
       \}\
             return results;\
    \}\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1 \cf0 \
}