	
		
1，将给定数组进行反转。{32,65,12,89,41} {41,89,12,65,32}
class lx1 
{
	public static void main(String[] args) 
	{
		int a[]={32,65,12,89,41};
		reverse(a);
		for (int i=0;i<a.length ;i++ )
		{
			System.out.print(a[i]+" ");
		}
    }


public static void reverse(int[] arr)
{
	int t;
	for(int i=0,j=arr.length-1;i<j;i++,j--)
	{
		t=arr[i];
		arr[i]=arr[j];
		arr[j]=t;
	}
}
}
		

2，将给定的数组变成字符串，[元素1,元素2...]
			{34,12,65} --> "[34,12,65]"
class lx2 
{
	public static void main(String[] args) 
	{
		int a[]={34,12,65};
		String b="[";
		for (int i=0;i<a.length ;i++ )
		{
			if(i!=a.length-1)
				b=b+a[i]+",";
			else
			     b=b+a[i];
			
		}
		b=b+"]";
		System.out.print(b);
		
	}
}


3. 对于一个有序的数组，如果要插入一个元素并保证数组还有序，问如何获取该元素位置。
		用二分法 
class lx3 
{
	public static void main(String[] args) 
	{
		int[] arr = {12,23,35,45,56,67,78,89};
		int n =82;
		
		int index=chaZhao(arr,n);
		System.out.print("index="+index);
	}
	public static int chaZhao(int[] arr , int key)
	{
		
		int min = 0,max = arr.length-1,mid = 0;
		
		while (min<=max)
		{
			mid = (min+	max)/2;	
			if(key>arr[mid])
			{
				min = mid+1;	
			}
			
			else if(key<arr[mid])
			{
				max = mid-1;
			}
			else
			  return mid;
	     }
		 return min;
     }
}


    