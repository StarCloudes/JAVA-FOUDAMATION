1: 定义接口，封装+-*/的方法，实现并测试。

2：瓶子类，重写equals方法，比较两个瓶子是否相等（只要材质，形状和大小相同，就认为相等）




1. 下面关于java.lang.Exception类的说法正确的是（A ）
A 继承自Throwable      B Serialable      C不记得，反正不正确

2. 下面程序的运行结果是（B ）
String str1 = "hello";
String str2 = "he" + new String("llo");
System.out.println(str1 == str2);
A true       B false

3. 下列说法正确的有（C）
A． class中的constructor不可省略
B． constructor必须与class同名，但方法不能与class同名
C． constructor在一个对象被new时执行
D．一个class只能定义一个constructor 

4. 下列说法正确的是（C）
A LinkedList继承自List
B AbstractSet继承自Set
C HashSet继承自AbstractSet
D WeakMap继承自HashMap

5. 存在使i + 1 < i的数吗（A）   byte a = 127    a+1 = -128
A 存在       B  不存在 

6. 0.6332的数据类型是（B）
A float     B double     C Float      D Double

7. 下面哪个流类属于面向字符的输入流(  )
 A  BufferedWriter           B  FileInputStream         
 C  ObjectInputStream        D  InputStreamReader

8. Java接口的修饰符可以为（D）
A private     B protected     C final       D abstract

9. 不通过构造函数也能创建对象吗（B）
A 是     B 否



11. 下面程序能正常运行吗（A）
public class NULL {
    public static void haha(){  
        System.out.println("haha");
    }
    public static void main(String[] args) {
        ((NULL)null).haha();
    }
}
A     能正常运行       B   不能

12. 写出下面程序的运行结果：
class HelloA {
    public HelloA() {
        System.out.println("HelloA");4
    }
    
    { System.out.println("I'm A class"); }3
    
    static { System.out.println("static A"); }1

}

public  class  HelloB  extends  HelloA {
    public HelloB() {//优先调用父类的构造方法
	
        System.out.println("HelloB");6
    }
    { System.out.println("I'm B class"); }5
    static { System.out.println("static B"); }2

    public static void main(String[] args) { 
　　　　 new HelloB(); 
　　 }
}

13. 下面代码的运行结果为：（C）
import java.io.*;
import java.util.*;
 public class foo{
    public static void main (String[] args){
        String s;
        System.out.println("s=" + s);    
     }
}
A 代码得到编译，并输出“s=” 
B 代码得到编译，并输出“s=null”
C 由于String s没有初始化，代码不能编译通过
D 代码得到编译，但捕获到 NullPointException异常

14.  System.out.println("5" + 2);的输出结果应该是（A）。
A  52          B  7          C  2                     D  5

15. 指出下列程序运行的结果 （B）
public class Example {
    String str = new String("good");
    char[] ch = { 'a', 'b', 'c' };
    public static void main(String args[]) {
        Example ex = new Example();
        ex.change(ex.str, ex.ch);
        System.out.print(ex.str + " and ");
        System.out.print(ex.ch);
    }
    public void change(String str, char ch[]) {
        str = "test ok";
        ch[0] = 'g';
    }
}
A、 good and abc
B、 good and gbc
C、 test ok and abc
D、 test ok and gbc 

16. 下列哪种异常是检查型异常，需要在编写程序时声明 （C）
A NullPointerException           B ClassCastException      
C FileNotFoundException          D IndexOutOfBoundsException 

17. 下面的方法，当输入为2的时候返回值是多少?（D）
    public static int getValue(int i) {
        int result = 0;
        switch (i) {
         case 1:
            result = result + i;
        case 2:
            result = result + i * 2;
        case 3:
            result = result + i * 3;
        }
        return result;
    }
A 0          B 2                 C 4                     D10

18. 选项中哪一行代码可以替换题目中//add code here而不产生编译错误？（A）
public abstract class MyClass {
     public int constInt = 5;
     //add code here
     public void method() {
     }
}
A public abstract void method(int a);
B constInt = constInt + 5;
C public int method();
D public abstract void anotherMethod() {}


19.下面是People和Child类的定义和构造方法，每个构造方法都输出编号。在执行new Child("mike")的时候都有哪些构造方法被顺序调用？请选择输出结果 ( D)
 class People {
    String name;
    public People() {
        System.out.print(1);
    }
    public People(String name) {
        System.out.print(2);
        this.name = name;
    }
}

class Child extends People {
    People father;
    public Child(String name) {//super();
        System.out.print(3);
        this.name = name;
        father = new People(name + ":F");
    }

    public Child() {
        System.out.print(4);
    } 
}
A 312           B 32         C 432              D 132


20.写出下面程序的运行结果是什么？
					Dervied tell name: null
					Dervied print name: null
					Dervied tell name: dervied
					Dervied print name: dervied

public class Dervied extends Base {  
    private String name = "dervied";
    public Dervied() {

        tellName();
        printName();
    }
    
    public void tellName() {
        System.out.println("Dervied tell name: " + name);
    }
    
    public void printName() {
        System.out.println("Dervied print name: " + name);
    }

    public static void main(String[] args){ 
        new Dervied();//1.执行父类的构造方法  2.给自己的成员变量赋值   3。调用构造方法中的调用的方法    
    }
}

class Base { 
    private String name = "base";
    public Base() {
        tellName();
        printName();
    } 
    public void tellName() {
        System.out.println("Base tell name: " + name);
    } 
    public void printName() {
        System.out.println("Base print name: " + name);
    }
}