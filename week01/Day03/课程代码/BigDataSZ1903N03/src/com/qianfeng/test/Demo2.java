package com.qianfeng.test;

public class Demo2 {
	//程序的入口
	public static void main(String[] args) {
		//代码写在这里
		//关键字:被java赋予了特殊的含义
		//标识符:java中需要我们自己命名的
		//可以  :aaA  _A   ___    $A   特殊:汉字可以  凯哥    不可以:4R     _#
		//注释:用来解释说明代码的,不参与编译
		//单行注释
		/*
		 * 多行注释
		 */
		//常量:固定不变的量
		//分类:小数常量   4.5   7.8   8.9
		//字符常量:'字符'    "字符串"
		//整数常量:4  6677
		//布尔常量:true   false
		
		//变量:存储程序中用到的数据,存储的值是可以改变的,只能存储一个值.
		
		//进制转化:
		//进制:遇到几进一就是几进制
		//常用的进制有二进制,八进制,十进制,十六进制
		//二进制:计算机能够识别的一种进制,实际上计算机只能识别高低电压,我们将高电压理解成1,低电压理解成0
		//八进制,十六进制:因为直接使用二进制存值占用的空间太大,所以找跟他联系紧密的八进制,十六进制,省空间
		
		//数据的范围:1bit  1Byte   1kB  1MB  1GB  1TB  1PB  ..
		
		//数据类型:分成基本数据类型和引用数据类型
		//基本数据类型:
		/*
		 * 数值型:现在研究的是有符号的数值型,有正负零之分
		 * 	>整数类型
		 * 		:byte      1个字节		[-2^7  2^7-1]  对于无符号型的:byte 的取值范围 [0,2^8-1]
		 * 		:short     2个字节	     [-2^15  2^15-1]
		 * 		:int	   4个字节              [-2^31  2^31-1]
		 * 		:long 	   8个字节		 [-2^63  2^63-1]
		 * 
		 * 	>浮点类型:小数类型
		 * 	>float    单精度浮点型				4个字节      最大值:3.4028235E38
		 *  >double   双精度浮点型,精度更高		8个字节     最大值:1.7976931348623157E308
		 * 布尔型
		 * 	boolean 1个字节  可以取的值true/false,注意:这里只能取true/false,不同于c,c中非零被认为是true,0被认为是false
		 * 字符型
		 * char   1个字节,默认对应的语言是英文,字符集是ASCII   0-48    A-65   a-97
		 * 针对中文:  对应的字符集是GBK/GB2312        一个汉字2个字节
		 * 常用的字符集: GBK(中国标准)   UTF-8(国际通用标准)    ASCII(国标)    uncode(内部编码)    ISO8859-1(欧洲标准)
		 * 	对于中文:	2个字节  3个字节   不支持中文    2个字节      不支持中文
		 * 
		 * 我们通常把字符串转成二进制的过程称为编码
		 * 将二进制转成字符串的过程称为解码
		 */
		//测试
		//整数类型
		//注意:1.只有在定义的时候赋值才叫初始化
		//2.对于一个普通的数,如果没有指定类型,他默认是int型的
		byte b = 1;//定义一个byte类型的变量b,并且初始化成1
		b = 5;//给变量b赋值5
		short s = 3;
		int i = 20;
		//b = 128;   因为128超出了byte的范围,无法表示
		//浮点型测试
		float maxf = Float.MAX_VALUE;
		double maxd = Double.MAX_VALUE;
		System.out.println(maxf);//3.4028235E38
		System.out.println(maxd);//1.7976931348623157E308
		float f = 3.14f;//默认是double型的,如果想表示float型,必须在数的后面加f
		double d = 3.14;
		//布尔型测试
		boolean b1 = true;
		//字符测试  
		char c = 'a' ;
		char c1 = 'b';//语法不通过
		System.out.println((int)c);//类型转换
		
		//数据类型转换
		//+号的作用:1.运算   1.在()中充当的是连接的作用,但是只要跟字符串连接的,最后都会被直接转成字符串
		/*
		 * 数据类型是有优先级的--按照数据所表示的数的大小
		 * 从低到高排
		 * char,byte--short---int--long---float---double
		 * 
		 * 我们将低类型的转成高类型的,叫自动类型转换,没有数据的损失,系统允许自动进行
		 * 高类型的转成低类型的叫强制类型转换,有可能有数据的损失,所以系统不允许自动进行,如果需要,我们可以手动实现.但是
		 * 后果自己承担.
		 */
		//测试
		long maxlong = Long.MAX_VALUE;
		System.out.println("结果:"+(maxf-maxlong));//结果:3.4028235E38
		short a1 = 129;  //00000000 10000001
		int a2 = a1; //00000000 00000000 00000000 10000001
		byte a3 = (byte)a1;//10000001   前面的一个字节直接被砍掉了
		
		//总结:现在说的是基本数据类型,后面再说引用数据类型.
	}
}
