package com.qianfeng.test;
/*
 * static:这是一个关键字,被static修饰的成员就变成了静态的.
 * 对于静态的成员,系统会在方法区中的静态方法区中存储一份.
 * 静态方法区的特点:专门用来存放static修饰的成员,放在这里的内容他的存活时间与程序一致.
 * 
 * 总结成员变量的特点:
 * 1.在创建对象的时候会赋默认值
 * 2.可以在类中定义变量的时候,直接赋值
 * 3.非静态的成员变量可以在除了static修饰的方法外任何地方使用.
 * 
  *成员变量和局部变量的区别:
 * 1.作用域:成员变量是整个对象.局部变量是从定义开始到所在的函数/if/for结束
 * 2.默认值:成员变量会有默认值,局部变量没有默认值,要想使用必须先赋值
 * 3.释放机制:成员变量跟对象保持一致,通过垃圾回收机制回收,局部变量使用完立即释放
 * 4.存放的位置:成员变量放在堆区中的对象中,局部变量放在栈区中的方法中.
 * 
  * 我们一般将成员分成两类:静态的成员(static)和非静态的成员
 * 静态的成员:静态的成员变量和成员方法.------可以使用引用调用,也可以使用类名调用
 * 非静态的成员:非静态的成员变量和成员方法.---只能使用引用调用
 * 
  * 为什么可以直接通过类名调用静态的成员?
 * *当成员被static修饰之后就变成了静态的,会在class生成的同时放在静态方法区中一份,而静态方法区的特点是内容会随着
程序的结束而释放,所以对象的创建与否不能影响他们的调用,所以可以直接使用类名调用
 
 
 
静态的成员方法和非静态的成员方法优先使用哪一个?
答:优先使用静态的成员方法
原因:静态的方法比非静态的效率高,节省内存.

注意:但是有一种情况例外:当方法中必须使用非静态的成员变量的时候,这时必须使用非静态的方法

总结:被static修饰的成员变量会变成静态的成员变量,成员方法会变成静态的成员方法.
 */
public class Demo6 {
	int aa;
	public static void main(String[] args) {
		Student student = new Student();
		student.name = "zhangsan ";
		student.show();
		student.age = 30;
		student.run();
		
		//直接通过类名调用
		Student.age = 30;
		Student.run();
		
		//Student.name;//类名不能调用非静态的成员
		
	}
}

class Student{
	String name = "bing";
	static int age;//静态的成员变量
	int height;
	
	//静态的方法
	public static void run() {
		System.out.println("run");
	}
	
	public void show() {
		System.out.println("show");
	}
}
